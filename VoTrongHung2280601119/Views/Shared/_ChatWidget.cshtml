@using Microsoft.AspNetCore.Identity
@using VoTrongHung2280601119.Models
@using VoTrongHung2280601119.Extensions
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - votronghung_2280601119</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Hệ thống Phân phối Sản phẩm</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Sản phẩm</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Chính sách Bảo mật</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Order" asp-action="History">Lịch sử Đơn hàng</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="Chat" asp-action="Index">Phòng Chat Chung</a>
                        </li>

                        @if (SignInManager.IsSignedIn(User))
                        {
                            // MỚI: Sửa link cho Admin để trỏ tới trang chat 1-1
                            if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item">
                                     <a class="nav-link text-info fw-bold" asp-area="Admin" asp-controller="Chat" asp-action="Index">Hỗ trợ Khách hàng</a>
                                </li>
                            }
                        }
                    </ul>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            @{
                                var cart = Context.Session.GetObjectFromJson<VoTrongHung2280601119.Models.ShoppingCart>("Cart");
                                var cartCount = cart?.Items.Sum(item => item.Quantity) ?? 0;
                            }
                            <a class="nav-link text-dark" asp-controller="ShoppingCart" asp-action="Index">
                                <i class="bi bi-cart-fill"></i> Giỏ hàng (@cartCount)
                            </a>
                        </li>
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @RenderBody()
        </main>
    </div>

    <!-- MỚI: BẮT ĐẦU KHUNG CHAT WIDGET CHO KHÁCH HÀNG -->
    @if (SignInManager.IsSignedIn(User) && !User.IsInRole("Admin"))
    {
        // Lấy thông tin người dùng hiện tại
        var currentUser = await UserManager.GetUserAsync(User);
        // Tìm một admin để chat (lấy người đầu tiên trong danh sách)
        var adminUser = (await UserManager.GetUsersInRoleAsync("Admin")).FirstOrDefault();

        // Chỉ hiển thị widget nếu có ít nhất một admin trong hệ thống
        if (adminUser != null)
        {
            var adminId = adminUser.Id;
            <div id="customerChatWidget" style="position:fixed; bottom:15px; right:15px; width:320px; border:1px solid #ddd; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.15); background:white; z-index:1050; display:flex; flex-direction:column;">
                <h6 id="chatWidgetHeader" class="bg-primary text-white p-2" style="cursor:pointer; border-top-left-radius: 8px; border-top-right-radius: 8px;">
                    Hỗ trợ trực tuyến
                    <span style="float:right;">&#9660;</span>
                </h6>
                <div id="chatWidgetBody" style="display:none;">
                    <div id="customerMessages" style="height:250px; overflow-y:scroll; padding:10px; border-bottom: 1px solid #eee;"></div>
                    <div class="p-2 d-flex">
                        <input type="text" id="customerMessageInput" class="form-control me-2" placeholder="Nhập tin nhắn..." />
                        <button id="customerSendButton" class="btn btn-sm btn-primary">Gửi</button>
                    </div>
                </div>
            </div>

            <script>
                // Đảm bảo script này chạy sau khi DOM đã được tải hoàn toàn
                document.addEventListener("DOMContentLoaded", function () {
                    const chatConnection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
                    const adminUserId = "@adminId"; // ID của Admin để gửi tin nhắn tới
                    const currentUserId = "@currentUser.Id";

                    const chatWidgetBody = document.getElementById('chatWidgetBody');
                    const header = document.getElementById('chatWidgetHeader');
                    const messagesDiv = document.getElementById("customerMessages");
                    const sendButton = document.getElementById("customerSendButton");
                    const messageInput = document.getElementById("customerMessageInput");

                    // Chức năng ẩn/hiện widget
                    header.addEventListener('click', () => {
                        if (chatWidgetBody.style.display === 'none') {
                            chatWidgetBody.style.display = 'block';
                            header.querySelector('span').innerHTML = '&#9650;'; // Mũi tên lên
                        } else {
                            chatWidgetBody.style.display = 'none';
                            header.querySelector('span').innerHTML = '&#9660;'; // Mũi tên xuống
                        }
                    });

                    // Gửi tin nhắn khi nhấn nút
                    sendButton.addEventListener("click", function () {
                        const msg = messageInput.value;
                        if (msg && adminUserId) {
                            chatConnection.invoke("SendPrivateMessage", adminUserId, msg).catch(err => console.error(err.toString()));
                            messageInput.value = "";
                            messageInput.focus();
                        }
                    });
                    
                    // Gửi tin nhắn khi nhấn Enter
                    messageInput.addEventListener("keypress", function(event) {
                        if (event.key === "Enter") {
                            event.preventDefault(); // Ngăn không xuống dòng
                            sendButton.click();
                        }
                    });

                    // Lắng nghe và nhận tin nhắn từ Hub
                    chatConnection.on("ReceivePrivateMessage", (senderId, message) => {
                        const p = document.createElement("p");
                        p.classList.add('mb-1');
                        
                        if (senderId === currentUserId) {
                            p.innerHTML = `<strong>Bạn:</strong> ${message}`;
                            p.classList.add('text-end'); // Căn phải tin nhắn của mình
                        } else {
                            p.innerHTML = `<strong>Hỗ trợ:</strong> ${message}`;
                        }
                        
                        messagesDiv.appendChild(p);
                        // Tự động cuộn xuống tin nhắn mới nhất
                        messagesDiv.scrollTop = messagesDiv.scrollHeight;
                    });

                    // Bắt đầu kết nối đến Hub
                    chatConnection.start().catch(err => console.error('SignalR Connection Error: ', err.toString()));
                });
            </script>
        }
    }
    <!-- MỚI: KẾT THÚC KHUNG CHAT WIDGET -->


    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - votronghung_2280601119 - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- SỬA LỖI: Cập nhật phiên bản SignalR client để tương thích với .NET 9 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
    
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/chat.js"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
